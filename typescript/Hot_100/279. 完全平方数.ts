/**
279. 完全平方数
给你一个整数 n ，返回 和为 n 的完全平方数的最少数量 。

完全平方数 是一个整数，其值等于另一个整数的平方；换句话说，其值等于一个整数自乘的积。例如，1、4、9 和 16 都是完全平方数，而 3 和 11 不是。

 

示例 1：

输入：n = 12
输出：3 
解释：12 = 4 + 4 + 4
示例 2：

输入：n = 13
输出：2
解释：13 = 4 + 9
 
提示：

1 <= n <= 104
 */
function numSquares(n: number): number {
  /**
   方法一：动态规划

   1. 对于一个数n, 它的完全平方数最大是n。
   2. 枚举所有小于n的完全平方数k
   3. 则n = k * k + m, 然后看一下m的完全平方数是多少,再加上1，就是n的完全平方数。（dp[n] = Math.min(dp[n], dp[m] + 1)） 
   4. 其中m = n - k * k
   5. 

   */
  const dp = [0]
  for (let i = 1; i <= n; i++) {
    dp[i] = i
    for (let j = 1; j * j <= i; j++) {
      dp[i] = Math.min(dp[i], dp[i - j * j] + 1)
    }
  }
  return dp[n]
}
